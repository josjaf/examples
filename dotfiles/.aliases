alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ll='ls -lha'

export EDITOR='vim'
export AWS_PAGER=""
export PAGER=""


alias gs="git status"
alias gd="git diff"
alias gc="git commit -m"
alias gb="git branch"
alias ga="git add"
alias gck="git checkout"

alias zzaws_params="aws ssm describe-parameters | jq '.Parameters[].Name'"
export AWS_SDK_LOAD_CONFIG=1 #terraform


zzaws_temp_session(){

if [[ -z $1 ]];
then
echo MISSING REQUIRED ARGUMENTS
echo account_id role_name
echo zzaws_temp_session 1234 josjaffe

return
fi
# do not remove environment variables from the shell, because that might be where the credentials are coming from
#unset AWS_PROFILE AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_DEFAULT_REGION AWS_SHARED_CREDENTIALS_FILE AWS_CONFIG_FILE
echo $1
echo $2
if ! [[ -z $3 ]];
then
export AWS_PROFILE=$3
else
echo AWS_PROFILE=default
fi

AWS_REGION=us-east-1
role_arn="arn:aws:iam::${1}:role/${2}"
echo "aws sts assume-role \
--role-arn $role_arn \
--role-session-name $(uuidgen))"
echo Creating new Session with $role_arn
temp_role=$(aws sts assume-role \
--role-arn $role_arn \
--role-session-name $(uuidgen))

export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)

env | grep -i AWS_
echo PYTHON
echo "helpers.get_child_session(${1}, ${2}, None)"
}
zzaws_temp_session_clear(){
unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_PROFILE AWS_SHARED_CREDENTIALS_FILE AWS_CONFIG_FILE
echo clearing aws variables

env | grep -i AWS_

}
zzaws_whoami(){

echo $(aws sts get-caller-identity)

}
function zzaws_env(){
for var in AWS_PROFILE AWS_DEFAULT_PROFILE AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_DEFAULT_REGION AWS_REGION AWS_SHARED_CREDENTIALS_FILE AWS_CONFIG_FILE;
do
    #echo $var : ${!var}
    echo $var : ${(P)var}
done
#env | grep -i AWS
}

function zzaws_instances(){
	aws ec2 describe-instances | jq '.Reservations[].Instances[] | (.Tags[]|select(.Key=="Name")|.Value) + " " + .InstanceId'

}

function zzaws_vpcs(){
	aws ec2 describe-vpcs | jq '.Vpcs[] | .VpcId + "    " + (.Tags[]|select(.Key=="Name")| .Value)'
}
function zzaws_subnets(){
 aws ec2 describe-subnets |  jq '.Subnets[] |.SubnetId + "," + .VpcId + "," + (.Tags[]|select(.Key=="Name" // false)|.Value)'


}
